import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'maven-publish'
    id 'application'
    id 'java'
}

compileTestJava.options.encoding = 'UTF-8'
compileJava.options.encoding = 'UTF-8'

mainClassName = 'io.github.syst3ms.skriptparser.Parser'

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation (group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2')
    implementation (group: 'org.jetbrains', name: 'annotations', version: '26.0.2')
    shadow (group: 'com.google.code.gson', name: 'gson', version: '2.11.0')

    testRuntimeOnly (group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.11.4')
    testRuntimeOnly (group: 'org.junit.jupiter', name:'junit-jupiter-engine', version: '5.12.0')

    testImplementation (group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.11.4')
    testImplementation (group: 'com.google.code.gson', name: 'gson', version: '2.11.0')
    testImplementation (group: 'junit', name: 'junit', version: '4.13.2')
}

publishing {
    repositories {
        maven {
            name = 'skript-parser'
            url = 'https://maven.pkg.github.com/ScrollLang/skript-parser'
            credentials {
                username = System.getenv("PACKAGES_USER") ?: project.findProperty("scrollUsername")
                password = System.getenv("PACKAGES_KEY") ?: project.findProperty("scrollPassword")
            }
        }
        publications {
            gpr(MavenPublication) {
                from(components.java)
                version = version
                groupId = 'org.scrolllang'
                def releases = 'skript-parser' // Don't modify
                def snapshots = 'skript-parser-dev' // Don't modify
                artifactId = version.contains('-dev') ? snapshots : releases
            }
        }
    }
}

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    manifest {
        attributes("Main-Class": mainClassName,
            "Implementation-Title": "skript-parser",
            "Implementation-Version": project.property("version"))
    }
}

processResources {
    filter ReplaceTokens, tokens: ["version": project.property("version")]
}
